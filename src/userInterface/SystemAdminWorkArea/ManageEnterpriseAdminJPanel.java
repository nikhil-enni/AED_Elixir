/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.SystemAdminWorkArea;

import business.EcoSystem;
import business.Employee.Employee;
import business.Enterprise.Enterprise;
import business.Network.Network;
import business.Role.AccountingAdminRole;
import business.Role.AdminRole;
import business.Role.EmergencyAdminRole;
import business.Role.EquipmentAdmin;
import business.Role.ManagementAdminRole;
import business.Role.MedicineAdmin;
import business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author sri_sai_nikhil_enni
 */
public class ManageEnterpriseAdminJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private EcoSystem system;
    /**
     * Creates new form ManageEnterpriseAdminJPanel
     */
    public ManageEnterpriseAdminJPanel(JPanel userProcessContainer, EcoSystem system) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.system = system;

        populateTable();
        populateNetworkComboBox();
    }
    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) enterpriseJTable.getModel();

        model.setRowCount(0);
        for (Network network : system.getNetworkList()) {
            for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                for (UserAccount userAccount : enterprise.getUserAccountDirectory().getUserAccountList()) {
                    Object[] row = new Object[3];
                    row[0] = enterprise.getName();
                    row[1] = network.getName();
                    row[2] = userAccount.getUsername();

                    model.addRow(row);
                }
            }
        }
    }

    private void populateNetworkComboBox() {
        networkJComboBox.removeAllItems();
       // networkJComboBox.addItem("Select");
       //  enterpriseJComboBox.removeAllItems();
          //  enterpriseJComboBox.addItem("Select");
        for (Network network : system.getNetworkList()) {
            networkJComboBox.addItem(network);
        }
    }

    private void populateEnterpriseComboBox(Network network) {
        enterpriseJComboBox.removeAllItems();
           // enterpriseJComboBox.addItem("Select");
        for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
            enterpriseJComboBox.addItem(enterprise);
        }

    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        enterpriseJTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        networkJComboBox = new javax.swing.JComboBox();
        enterpriseJComboBox = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        usernameJTextField = new javax.swing.JTextField();
        passwordJPasswordField = new javax.swing.JPasswordField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        nameJTextField = new javax.swing.JTextField();
        submitJButton = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(900, 600));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        enterpriseJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Enterprise Name", "Network", "Username"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(enterpriseJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 69, 523, 95));

        jLabel1.setText("Network");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(206, 194, -1, -1));

        networkJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        networkJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                networkJComboBoxActionPerformed(evt);
            }
        });
        add(networkJComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(309, 189, 136, 29));

        enterpriseJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        enterpriseJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterpriseJComboBoxActionPerformed(evt);
            }
        });
        add(enterpriseJComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(309, 243, 136, 29));

        jLabel3.setText("Enterprise");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(196, 248, -1, -1));

        jLabel2.setText("Username");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(197, 303, -1, -1));
        add(usernameJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(309, 297, 136, 29));
        add(passwordJPasswordField, new org.netbeans.lib.awtextra.AbsoluteConstraints(309, 351, 136, 29));

        jLabel4.setText("Password");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 357, -1, -1));

        jLabel5.setText("Name");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(223, 411, -1, -1));
        add(nameJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(309, 405, 136, 29));

        submitJButton.setText("Submit");
        submitJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitJButtonActionPerformed(evt);
            }
        });
        add(submitJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(309, 459, 136, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("MANAGE ENTERPRISE ADMIN");
        jLabel6.setPreferredSize(new java.awt.Dimension(400, 50));
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(182, 13, 381, 38));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/enterprise.png"))); // NOI18N
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(-4, -4, 910, 610));
    }// </editor-fold>//GEN-END:initComponents

    private void networkJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_networkJComboBoxActionPerformed

       System.out.println(networkJComboBox.getSelectedItem());
        if(networkJComboBox.getSelectedItem() != "Select")
        {
            Network network = (Network) networkJComboBox.getSelectedItem();
            if (network != null ) {
                populateEnterpriseComboBox(network);
            }
        }
        else
        {
             enterpriseJComboBox.removeAllItems();
            enterpriseJComboBox.addItem("Select");
        
        }

    }//GEN-LAST:event_networkJComboBoxActionPerformed

    private void submitJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitJButtonActionPerformed

          if(enterpriseJComboBox.getSelectedItem().equals("Select") || networkJComboBox.getSelectedItem().equals("Select"))
        {
            JOptionPane.showMessageDialog(null, "Please select Type and Network!");
            return;
        }
        Enterprise enterprise = (Enterprise) enterpriseJComboBox.getSelectedItem();
         Network network = (Network) networkJComboBox.getSelectedItem();

        String username = usernameJTextField.getText();
        String password = String.valueOf(passwordJPasswordField.getPassword());
        String name = nameJTextField.getText();

       // Employee employee = enterprise.getEmployeeDirectory().createEmployee(name);
          for (Network netwrk : system.getNetworkList()) {
            for (Enterprise enterpre : netwrk.getEnterpriseDirectory().getEnterpriseList()) {
                for (UserAccount userAccount : enterpre.getUserAccountDirectory().getUserAccountList()) {
                    
//                    if(userAccount.getRole() instanceof EmergencyAdminRole && network.getName().equals(netwrk.getName()) )
//                    {
//                          System.out.println(userAccount.getUsername());
//                        System.out.println(network.getName());
//                      JOptionPane.showMessageDialog(null, "Admin already created");   
//                       usernameJTextField.setText("");
//                        passwordJPasswordField.setText("");
//                        nameJTextField.setText("");
//                      return;
//                    }
                
                }
            }
          }

//        UserAccount account = enterprise.getUserAccountDirectory().createUserAccount(username, password, employee, new AdminRole());
        if (system.checkIfUserIsUnique(username)) {
                UserAccount account = null;
                if (enterprise.getEnterpriseType() == Enterprise.EnterpriseType.EmergencyUnit) {
                    Employee employee = enterprise.getEmployeeDirectory().createEmployee(name);
                    account = enterprise.getUserAccountDirectory().createUserAccount(username, password, employee, new EmergencyAdminRole());
                } else if (enterprise.getEnterpriseType() == Enterprise.EnterpriseType.AccountingUnit) {
                    Employee employee = enterprise.getEmployeeDirectory().createEmployee(name);
                    account = enterprise.getUserAccountDirectory().createUserAccount(username, password, employee, new AccountingAdminRole());
                } else if (enterprise.getEnterpriseType() == Enterprise.EnterpriseType.EquipmentUnit) {
                    Employee employee = enterprise.getEmployeeDirectory().createEmployee(name);
                    account = enterprise.getUserAccountDirectory().createUserAccount(username, password, employee, new EquipmentAdmin());
                } else if (enterprise.getEnterpriseType() == Enterprise.EnterpriseType.ManagementUnit) {
                    Employee employee = enterprise.getEmployeeDirectory().createEmployee(name);
                    account = enterprise.getUserAccountDirectory().createUserAccount(username, password, employee, new ManagementAdminRole());
                }else if (enterprise.getEnterpriseType() == Enterprise.EnterpriseType.MedicalUnit) {
                    Employee employee = enterprise.getEmployeeDirectory().createEmployee(name);
                    account = enterprise.getUserAccountDirectory().createUserAccount(username, password, employee, new MedicineAdmin());
                }
                
                usernameJTextField.setText("");
                passwordJPasswordField.setText("");
                nameJTextField.setText("");
                JOptionPane.showMessageDialog(null, "Account created sucessfully");
                populateTable();
            }else {
                JOptionPane.showMessageDialog(null, "Please enter unique username", "Warning", JOptionPane.WARNING_MESSAGE);
            }
        populateTable();
    }//GEN-LAST:event_submitJButtonActionPerformed

    private void enterpriseJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterpriseJComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_enterpriseJComboBoxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox enterpriseJComboBox;
    private javax.swing.JTable enterpriseJTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nameJTextField;
    private javax.swing.JComboBox networkJComboBox;
    private javax.swing.JPasswordField passwordJPasswordField;
    private javax.swing.JButton submitJButton;
    private javax.swing.JTextField usernameJTextField;
    // End of variables declaration//GEN-END:variables
}
